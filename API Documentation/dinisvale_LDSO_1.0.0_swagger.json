{
  "swagger" : "2.0",
  "info" : {
    "description" : "This API allows a student that is using the FEUP-8 app to perform cloud-based operations by contacting the server running it. This specification describes the communication between the app and the server, which allows to perform user and exercises actions.\n",
    "version" : "1.0.0",
    "title" : "FEUP-8 Server API"
  },
  "tags" : [ {
    "name" : "exercises",
    "description" : "Operations regarding exercises"
  }, {
    "name" : "user",
    "description" : "Operations regarding user"
  } ],
  "paths" : {
    "/exercises/all" : {
      "get" : {
        "tags" : [ "exercises" ],
        "summary" : "Get all exercises from database",
        "description" : "Allows a student to retrieve all exercises available on the database that they have permission to access (public ones + the ones they were explicitly given permission to access)",
        "operationId" : "allexercises",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "response_code" : {
                  "$ref" : "#/definitions/ResponseCode"
                },
                "exercises" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ExerciseSimplified"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exercises/{exercise_id}" : {
      "get" : {
        "tags" : [ "exercises" ],
        "summary" : "Get exercise details by exercise id",
        "description" : "Allows a student to retrieve the details of a specific exercise. If the student has no permission to access the exercise, returns response_code = 1.",
        "operationId" : "getexerciseById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "exercise_id",
          "in" : "path",
          "description" : "ID of exercises to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "response_code" : {
                  "$ref" : "#/definitions/ResponseCode"
                },
                "exercises" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ExerciseDetailed"
                  }
                },
                "tests" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ExerciseTest"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/exercises/{exercise_id}/save" : {
      "post" : {
        "tags" : [ "exercises" ],
        "summary" : "Save progress on exercise to server",
        "description" : "Allows a student to save its current progress on an exercise to the server so that he can continue from the point he stopped at, as long as he logs in with the same account",
        "operationId" : "saveProgressOnExercise",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "exercise_id",
          "in" : "path",
          "description" : "ID of the exercise that the student wants to save the progress on",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "exercise_data",
          "in" : "formData",
          "description" : "The data (generated by the FEUP-8 app) which represents the progress of the student on the exercise which can be loaded on the app to restore the student's work. It is encoded in base64.",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "name" : "progress",
          "in" : "formData",
          "description" : "The progress percentage that the student has currently made on the exercise",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "response_code" : {
                  "$ref" : "#/definitions/ResponseCode"
                },
                "exercises" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ExerciseDetailed"
                  }
                },
                "tests" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ExerciseTest"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/exercises/{exercise_id}/test" : {
      "post" : {
        "tags" : [ "exercises" ],
        "summary" : "Run tests on exercise",
        "description" : "Send exercise code to server and run the exercise tests on the code. This is used for the student to check its correctness on the exercise solving.",
        "operationId" : "RunTestsOnExercise",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "exercise_id",
          "in" : "path",
          "description" : "ID of the exercise to run the specific tests on",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "code",
          "in" : "formData",
          "description" : "The code which the student has developed to solve the exercise, encoded in base64.",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "response_code" : {
                  "$ref" : "#/definitions/ResponseCode"
                },
                "tests_global_state" : {
                  "type" : "integer",
                  "description" : "An int identifying the global result of the tests run. Possible values -2 if execution timeout; -1 if syntactic errors on code by student; >=0 indicates the number of tests failed.",
                  "example" : 0
                },
                "tests_results" : {
                  "$ref" : "#/definitions/ExerciseTestResults"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/register" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "Allows a visitor to register on the server using the FEUP-8 app",
        "operationId" : "createUser",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "formData",
          "description" : "The name of the user to be registered",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "name" : "email",
          "in" : "formData",
          "description" : "The email of the user to be registered",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "name" : "username",
          "in" : "formData",
          "description" : "The username to be registered (this will be used as ID for logging in)",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "The password to be registered (this will be used as password for logging in)",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "response_code" : {
                  "$ref" : "#/definitions/ResponseCode"
                }
              }
            }
          }
        }
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "operationId" : "loginUser",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "formData",
          "description" : "The user name for login",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "The password for login in clear text",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "response_code" : {
                  "$ref" : "#/definitions/ResponseCode"
                }
              }
            }
          }
        }
      }
    },
    "/user/logout" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs out current logged in user session",
        "operationId" : "logoutUser",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "response_code" : {
                  "$ref" : "#/definitions/ResponseCode"
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "exercisesstore_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://exercisesstore.swagger.io/oauth/dialog",
      "flow" : "implicit",
      "scopes" : {
        "write:exercisess" : "modify exercisess in your account",
        "read:exercisess" : "read your exercisess"
      }
    },
    "api_key" : {
      "type" : "apiKey",
      "name" : "api_key",
      "in" : "header"
    }
  },
  "definitions" : {
    "ResponseCode" : {
      "type" : "integer",
      "description" : "An integer indicating the result of the request. 0 indicates success; 1 forbidden (no permissions to access given resource); 2 server error",
      "example" : 0
    },
    "ExerciseSimplified" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "The unique identifier of the exercise",
          "type" : "integer",
          "example" : 1
        },
        "title" : {
          "description" : "The title of the exercise",
          "type" : "string",
          "example" : "Make a super mario style platform game"
        },
        "progress" : {
          "description" : "The progress percentage that the student has currently made on an exercise",
          "type" : "integer",
          "example" : 77
        }
      }
    },
    "ExerciseDetailed" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "description" : "The title of the exercise",
          "type" : "string",
          "example" : "Make a super mario style platform game"
        },
        "description" : {
          "description" : "A description of the exercise (what the student is supposed to do)",
          "type" : "string",
          "example" : "This exercise allows you to use your imagination to make a super mario style game. There are no restrictions. Just go with your imagination."
        },
        "img_base64" : {
          "description" : "The illustrative image of the exercise encoded in base64",
          "type" : "string",
          "example" : "MWRkMTgxY2ViZDU2N2UxNWU1ZjA1MDUxM2Q3OWRkM2EyMGU1MDc4NDk3YTJiODUwMTc1YzA3YjBjNDliZTk1ZA=="
        },
        "creator_name" : {
          "description" : "The name of the professor that created the exercise.",
          "type" : "string",
          "example" : "Professor Richard"
        },
        "progress" : {
          "description" : "The progress percentage that the student has currently made on an exercise",
          "type" : "integer",
          "example" : 77
        },
        "feup8_file" : {
          "description" : "The file that stores the progress of the student on the exercise encoded in base64.",
          "type" : "integer",
          "example" : "ZDM2Y2M5NDZmMzE2MTRmM2RkN2UzZTQzNzU4NWU3ZTdlZjA0ZjdkZjg3MTY5NjFlMzE0MzkyZjhkMmRiYTBmYQ=="
        }
      }
    },
    "ExerciseTest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "The unique identifier of the exercise",
          "type" : "integer",
          "example" : 1
        },
        "title" : {
          "description" : "The title of the exercise test",
          "type" : "string",
          "example" : "This test ensure your periodic updating function, does indeed updated the desired variables"
        },
        "test_code" : {
          "description" : "The code used to test if the student code is correct (t)his is encoded in base64)",
          "type" : "string",
          "example" : "ZnVuY3Rpb24gdGVzdDJfc3ViKCkKbHVhdW5pdC5hc3NlcnRFcXVhbHMoc3ViKDMsNCkgLCAtMSkKbHVhdW5pdC5hc3NlcnRFcXVhbHMoc3ViKDQsMykgLCAxKQpsdWF1bml0LmFzc2VydEVxdWFscyhzdWIoMywtNCkgLCA3KQpsdWF1bml0LmFzc2VydEVxdWFscyhzdWIoLTQsMykgLCAtNykKbHVhdW5pdC5hc3NlcnRFcXVhbHMoc3ViKC00LC0zKSAsIC0xKQpsdWF1bml0LmFzc2VydEVxdWFscyhzdWIoLTMsLTQpICwgMSkKZW5k"
        },
        "hint" : {
          "description" : "The hint about the test created by the teacher for the student",
          "type" : "string",
          "example" : "Ensure you are updating the game time counter, the character position based on speed and the moving mobs positions also based on their speed"
        }
      }
    },
    "ExerciseTestResults" : {
      "type" : "object",
      "properties" : {
        "exercise1_title" : {
          "type" : "boolean",
          "description" : "A test result. The key represents the title of the test and the value tells weather the test succeeded or not.",
          "example" : true
        },
        "exercise2_title" : {
          "type" : "boolean",
          "description" : "A test result. The key represents the title of the test and the value tells weather the test succeeded or not.",
          "example" : false
        }
      }
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/dinisvale/LDSO/1.0.0",
  "schemes" : [ "https" ]
}