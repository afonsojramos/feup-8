stages:
    - build
    - test
    - coverage
    - update
    - deploy


build:website:
    image: registry.gitlab.com/afonsojramos/feup-8:website-staging
    stage: build
    artifacts:
        untracked: true
    script:
        - cd Website
        - composer install


build:feup-8:
    image: registry.gitlab.com/afonsojramos/feup-8:feup-8
    stage: build
    artifacts:
        paths:
            - ./FEUP-8/tic80_coverage
            - ./FEUP-8/bin/tic80
            - ./FEUP-8/release
    script:
        - apt-get update
        - apt-get install lcov -y
        - apt-get install zip -y
        - cd FEUP-8
        - cmake .
        - make tic80_coverage
        - make -j4
        - sh package.sh


test:website:
    services:
    -   name: postgres:11.1-alpine
        alias: postgres-db
    variables:
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: $POSTGRES_PASS


    image: registry.gitlab.com/afonsojramos/feup-8:website-staging
    stage: test
    dependencies:
        - build:website

    script:
        - cd Website
        - php artisan migrate:refresh --env=testing
        - php artisan db:seed --class=TestsSeeder --env=testing
        - php artisan passport:install --env=testing
        - ./vendor/bin/phpunit --testdox
        - rm -f ./storage/framework/views/*
        - wget https://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -O php-cs-fixer
        - php php-cs-fixer fix -v --dry-run --using-cache=no
        - find . -name "*.php" -not -path "./vendor/*" | xargs --max-args=1 php -l
    artifacts:
        paths:
            - ./Website/report


test:feup-8:
    image: registry.gitlab.com/afonsojramos/feup-8:feup-8
    stage: test
    artifacts:
        untracked: true
    dependencies:
        - build:feup-8
    script:
        - cd FEUP-8/bin
        - ./tic80 -test


coverage:pages:
  stage: coverage
  dependencies:
    - test:website
    - build:feup-8
  script:
    - cd ./Website/report
    - mv index.html coverage_website.html
    - cd ../..
    - cd ./FEUP-8/tic80_coverage
    - mv index.html coverage_feup8.html
    - cp -r . ../../Website/report
    - cd ../..
    - cp index.html ./Website/report
    - mv ./Website/report/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - development


update:update-images-development:
    image: docker:stable
    stage: update
    services:
        - docker:dind
    script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker build ./Website/. -t registry.gitlab.com/afonsojramos/feup-8:website-staging
        - docker push registry.gitlab.com/afonsojramos/feup-8:website-staging
    only:
        - development


update:update-images-master:
    image: docker:stable
    stage: update
    services:
        - docker:dind
    script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker build ./FEUP-8/. -t registry.gitlab.com/afonsojramos/feup-8:feup-8
        - docker push registry.gitlab.com/afonsojramos/feup-8:feup-8

        - docker build ./Website/. -t registry.gitlab.com/afonsojramos/feup-8:website-prod
        - docker push registry.gitlab.com/afonsojramos/feup-8:website-prod
    only:
        - master


deploy:website-prod:
    image: alpine:latest
    stage: deploy
    dependencies:
    - update:update-images-master

    before_script:
        - 'which ssh-agent || ( apk update && apk add openssh-client )'
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts
    script:
       - ssh root@prod.feup8.tk "/updateServer.sh prod $APP_KEY $DB_PASSWORD"
    environment:
        name: production
        url: http://prod.feup8.tk
    only:
        - master
    when: manual


deploy:website-staging:
    image: alpine:latest
    stage: deploy
    dependencies:
    - update:update-images-development

    before_script:
        - 'which ssh-agent || ( apk update && apk add openssh-client )'
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts
    script:
       - ssh root@prod.feup8.tk "/updateServer.sh staging $APP_KEY $DB_PASSWORD"
    environment:
        name: staging
        url: http://staging.feup8.tk:2375
    only:
        - development
    when: manual
