
/*!
 * \defgroup Initialization Initialization
 * SDL_gpu has a fairly simple initialization process.  If you need nothing more than the default initialization, call:
 * <pre>GPU_Target* screen = GPU_Init(width, height, GPU_DEFAULT_INIT_FLAGS);</pre>
 * Then when you're done, clean up with:
 * <pre>GPU_Quit();</pre>
 * 
 * Other functions in the Initialization module control how initialization is performed.
 * 
 * 
 * \defgroup Logging Debugging, Logging, and Error Handling
 * Use GPU_Log() for normal logging output (e.g. to replace printf).  Other logging priorities are handled by GPU_LogWarning() and GPU_LogError().
 * 
 * SDL_gpu stores an error queue that you can read and manipulate using GPU_PopErrorCode() and GPU_PushErrorCode().  If you set the debug level using GPU_SetDebugLevel(), you can have any errors automatically logged as they are generated.
 * 
 * \defgroup RendererSetup Renderer Setup
 * \defgroup RendererControls Renderer Controls
 * \defgroup ContextControls Context Controls
 * \defgroup TargetControls Target Controls
 * \defgroup SurfaceControls Surface Controls
 * \defgroup ImageControls Image Controls
 * \defgroup Conversions Surface, Image, and Target Conversions
 * \defgroup Matrix Matrix Controls
 * \defgroup Rendering Rendering
 * \defgroup Shapes Shapes
 * \defgroup ShaderInterface Shader Interface
 */
 



 
